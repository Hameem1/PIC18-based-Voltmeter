

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Jun 14 09:20:05 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	idataCOMRAM
    33  00068A                     __pidataCOMRAM:
    34                           	opt stack 0
    35                           
    36                           ;initializer for _factor
    37  00068A  D7                 	db	215
    38  00068B  A3                 	db	163
    39  00068C  3E                 	db	62
    40                           
    41                           	psect	idataBANK0
    42  000676                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _table
    46  000676  03                 	db	3
    47  000677  9F                 	db	159
    48  000678  25                 	db	37
    49  000679  0D                 	db	13
    50  00067A  99                 	db	153
    51  00067B  49                 	db	73
    52  00067C  41                 	db	65
    53  00067D  1F                 	db	31
    54  00067E  01                 	db	1
    55  00067F  19                 	db	25
    56  0000                     _ADCON0	set	4034
    57  0000                     _ADCON0bits	set	4034
    58  0000                     _ADCON1	set	4033
    59  0000                     _ADCON2	set	4032
    60  0000                     _ADRESH	set	4036
    61  0000                     _ADRESL	set	4035
    62  0000                     _INTCONbits	set	4082
    63  0000                     _PIE1bits	set	3997
    64  0000                     _PIR1bits	set	3998
    65  0000                     _PORTB	set	3969
    66  0000                     _PORTDbits	set	3971
    67  0000                     _T0CON	set	4053
    68  0000                     _T0CONbits	set	4053
    69  0000                     _TMR0H	set	4055
    70  0000                     _TMR0L	set	4054
    71  0000                     _TRISAbits	set	3986
    72  0000                     _TRISB	set	3987
    73  0000                     _TRISD	set	3989
    74                           
    75                           ; #config settings
    76  0000                     
    77                           	psect	cinit
    78  000556                     __pcinit:
    79                           	opt stack 0
    80  000556                     start_initialization:
    81                           	opt stack 0
    82  000556                     __initialization:
    83                           	opt stack 0
    84                           
    85                           ; Clear objects allocated to BANK0 (2 bytes)
    86  000556  0100               	movlb	0
    87  000558  6B7C               	clrf	(__pbssBANK0+1)& (0+255),b
    88  00055A  6B7B               	clrf	__pbssBANK0& (0+255),b
    89                           
    90                           ; Clear objects allocated to COMRAM (4 bytes)
    91  00055C  6A3D               	clrf	(__pbssCOMRAM+3)& (0+255),c
    92  00055E  6A3C               	clrf	(__pbssCOMRAM+2)& (0+255),c
    93  000560  6A3B               	clrf	(__pbssCOMRAM+1)& (0+255),c
    94  000562  6A3A               	clrf	__pbssCOMRAM& (0+255),c
    95                           
    96                           ; Initialize objects allocated to BANK0 (10 bytes)
    97                           ; load TBLPTR registers with __pidataBANK0
    98  000564  0E76               	movlw	low __pidataBANK0
    99  000566  6EF6               	movwf	tblptrl,c
   100  000568  0E06               	movlw	high __pidataBANK0
   101  00056A  6EF7               	movwf	tblptrh,c
   102  00056C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   103  00056E  6EF8               	movwf	tblptru,c
   104  000570  EE00  F071         	lfsr	0,__pdataBANK0
   105  000574  EE10 F00A          	lfsr	1,10
   106  000578                     copy_data0:
   107  000578  0009               	tblrd		*+
   108  00057A  CFF5 FFEE          	movff	tablat,postinc0
   109  00057E  50E5               	movf	postdec1,w,c
   110  000580  50E1               	movf	fsr1l,w,c
   111  000582  E1FA               	bnz	copy_data0
   112                           
   113                           ; Initialize objects allocated to COMRAM (3 bytes)
   114                           ; load TBLPTR registers with __pidataCOMRAM
   115  000584  0E8A               	movlw	low __pidataCOMRAM
   116  000586  6EF6               	movwf	tblptrl,c
   117  000588  0E06               	movlw	high __pidataCOMRAM
   118  00058A  6EF7               	movwf	tblptrh,c
   119  00058C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   120  00058E  6EF8               	movwf	tblptru,c
   121  000590  0009               	tblrd		*+	;fetch initializer
   122  000592  CFF5 F03E          	movff	tablat,__pdataCOMRAM
   123  000596  0009               	tblrd		*+	;fetch initializer
   124  000598  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
   125  00059C  0009               	tblrd		*+	;fetch initializer
   126  00059E  CFF5 F040          	movff	tablat,__pdataCOMRAM+2
   127  0005A2                     end_of_initialization:
   128                           	opt stack 0
   129  0005A2                     __end_of__initialization:
   130                           	opt stack 0
   131  0005A2  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   132  0005A4  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   133  0005A6  0100               	movlb	0
   134  0005A8  EFF9  F002         	goto	_main	;jump to C main() function
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           postinc0	equ	0xFEE
   140                           postdec1	equ	0xFE5
   141                           fsr1l	equ	0xFE1
   142                           
   143                           	psect	bssCOMRAM
   144  00003A                     __pbssCOMRAM:
   145                           	opt stack 0
   146  00003A                     _number:
   147                           	opt stack 0
   148  00003A                     	ds	3
   149  00003D                     _count:
   150                           	opt stack 0
   151  00003D                     	ds	1
   152                           tblptru	equ	0xFF8
   153                           tblptrh	equ	0xFF7
   154                           tblptrl	equ	0xFF6
   155                           tablat	equ	0xFF5
   156                           postinc0	equ	0xFEE
   157                           postdec1	equ	0xFE5
   158                           fsr1l	equ	0xFE1
   159                           
   160                           	psect	dataCOMRAM
   161  00003E                     __pdataCOMRAM:
   162                           	opt stack 0
   163  00003E                     _factor:
   164                           	opt stack 0
   165  00003E                     	ds	3
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           tblptrl	equ	0xFF6
   169                           tablat	equ	0xFF5
   170                           postinc0	equ	0xFEE
   171                           postdec1	equ	0xFE5
   172                           fsr1l	equ	0xFE1
   173                           
   174                           	psect	bssBANK0
   175  00007B                     __pbssBANK0:
   176                           	opt stack 0
   177  00007B                     _input:
   178                           	opt stack 0
   179  00007B                     	ds	2
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           postinc0	equ	0xFEE
   185                           postdec1	equ	0xFE5
   186                           fsr1l	equ	0xFE1
   187                           
   188                           	psect	dataBANK0
   189  000071                     __pdataBANK0:
   190                           	opt stack 0
   191  000071                     _table:
   192                           	opt stack 0
   193  000071                     	ds	10
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	cstackBANK0
   203  000060                     __pcstackBANK0:
   204                           	opt stack 0
   205  000060                     ?___lwdiv:
   206                           	opt stack 0
   207  000060                     delay_10ms@t:
   208                           	opt stack 0
   209  000060                     ___lwdiv@dividend:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x0
   213  000060                     	ds	2
   214  000062                     ??_delay_10ms:
   215  000062                     ___lwdiv@divisor:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x2
   219  000062                     	ds	1
   220  000063                     delay_10ms@i:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x3
   224  000063                     	ds	1
   225  000064                     ___lwdiv@quotient:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x4
   229  000064                     	ds	2
   230  000066                     ___lwdiv@counter:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x6
   234  000066                     	ds	1
   235  000067                     ?___lwmod:
   236                           	opt stack 0
   237  000067                     ___lwmod@dividend:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x7
   241  000067                     	ds	2
   242  000069                     ___lwmod@divisor:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x9
   246  000069                     	ds	2
   247  00006B                     ___lwmod@counter:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0xB
   251  00006B                     	ds	1
   252  00006C                     fragment@x:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0xC
   256  00006C                     	ds	2
   257  00006E                     fragment@unit:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0xE
   261  00006E                     	ds	1
   262  00006F                     fragment@ten:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0xF
   266  00006F                     	ds	1
   267  000070                     fragment@hun:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x10
   271  000070                     	ds	1
   272  000071                     tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           postdec1	equ	0xFE5
   278                           fsr1l	equ	0xFE1
   279                           
   280                           ; 1 bytes @ 0x11
   281                           
   282                           	psect	cstackCOMRAM
   283  000001                     __pcstackCOMRAM:
   284                           	opt stack 0
   285  000001                     ?___ftpack:
   286                           	opt stack 0
   287  000001                     ___ftpack@arg:
   288                           	opt stack 0
   289                           
   290                           ; 3 bytes @ 0x0
   291  000001                     	ds	3
   292  000004                     ___ftpack@exp:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x3
   296  000004                     	ds	1
   297  000005                     ___ftpack@sign:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x4
   301  000005                     	ds	1
   302  000006                     ??___ftpack:
   303                           
   304                           ; 1 bytes @ 0x5
   305  000006                     	ds	3
   306  000009                     ?___lwtoft:
   307                           	opt stack 0
   308  000009                     ___lwtoft@c:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x8
   312  000009                     	ds	3
   313  00000C                     ?___ftmul:
   314                           	opt stack 0
   315  00000C                     ___ftmul@f1:
   316                           	opt stack 0
   317                           
   318                           ; 3 bytes @ 0xB
   319  00000C                     	ds	3
   320  00000F                     ___ftmul@f2:
   321                           	opt stack 0
   322                           
   323                           ; 3 bytes @ 0xE
   324  00000F                     	ds	3
   325  000012                     ??___ftmul:
   326                           
   327                           ; 1 bytes @ 0x11
   328  000012                     	ds	3
   329  000015                     ___ftmul@exp:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x14
   333  000015                     	ds	1
   334  000016                     ___ftmul@f3_as_product:
   335                           	opt stack 0
   336                           
   337                           ; 3 bytes @ 0x15
   338  000016                     	ds	3
   339  000019                     ___ftmul@cntr:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x18
   343  000019                     	ds	1
   344  00001A                     ___ftmul@sign:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x19
   348  00001A                     	ds	1
   349  00001B                     ?___fttol:
   350                           	opt stack 0
   351  00001B                     ___fttol@f1:
   352                           	opt stack 0
   353                           
   354                           ; 3 bytes @ 0x1A
   355  00001B                     	ds	4
   356  00001F                     ??___fttol:
   357                           
   358                           ; 1 bytes @ 0x1E
   359  00001F                     	ds	5
   360  000024                     ___fttol@sign1:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x23
   364  000024                     	ds	1
   365  000025                     ___fttol@lval:
   366                           	opt stack 0
   367                           
   368                           ; 4 bytes @ 0x24
   369  000025                     	ds	4
   370  000029                     ___fttol@exp1:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x28
   374  000029                     	ds	1
   375  00002A                     ??_isr:
   376                           
   377                           ; 1 bytes @ 0x29
   378  00002A                     	ds	14
   379  000038                     isr@x:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x37
   383  000038                     	ds	2
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           postdec1	equ	0xFE5
   390                           fsr1l	equ	0xFE1
   391                           
   392 ;;
   393 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   394 ;;
   395 ;; *************** function _main *****************
   396 ;; Defined at:
   397 ;;		line 146 in file "attempt_1.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   411 ;;      Params:         0       0       0       0       0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0       0       0       0       0
   414 ;;      Totals:         0       0       0       0       0       0       0       0       0
   415 ;;Total ram usage:        0 bytes
   416 ;; Hardware stack levels required when called:    5
   417 ;; This function calls:
   418 ;;		_adc_init
   419 ;;		_delay_10ms
   420 ;;		_fragment
   421 ;;		_init_timer
   422 ;;		_interrupt_enable
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text0
   429  0005F2                     __ptext0:
   430                           	opt stack 0
   431  0005F2                     _main:
   432                           	opt stack 26
   433                           
   434                           ;attempt_1.c: 149: TRISAbits.RA0 = 1;
   435                           
   436                           ;incstack = 0
   437  0005F2  8092               	bsf	3986,0,c	;volatile
   438                           
   439                           ;attempt_1.c: 150: TRISB = 0;
   440  0005F4  0E00               	movlw	0
   441  0005F6  6E93               	movwf	3987,c	;volatile
   442                           
   443                           ;attempt_1.c: 151: TRISD = 0x1F;
   444  0005F8  0E1F               	movlw	31
   445  0005FA  6E95               	movwf	3989,c	;volatile
   446                           
   447                           ;attempt_1.c: 153: interrupt_enable();
   448  0005FC  EC40  F003         	call	_interrupt_enable	;wreg free
   449                           
   450                           ;attempt_1.c: 154: adc_init();
   451  000600  EC25  F003         	call	_adc_init	;wreg free
   452                           
   453                           ;attempt_1.c: 155: init_timer();
   454  000604  EC32  F003         	call	_init_timer	;wreg free
   455  000608                     l1167:
   456                           
   457                           ;attempt_1.c: 158: {
   458                           ;attempt_1.c: 159: delay_10ms(10);
   459  000608  0E00               	movlw	0
   460  00060A  0100               	movlb	0	; () banked
   461  00060C  6F61               	movwf	(delay_10ms@t+1)& (0+255),b
   462  00060E  0E0A               	movlw	10
   463  000610  6F60               	movwf	delay_10ms@t& (0+255),b
   464  000612  ECD6  F002         	call	_delay_10ms	;wreg free
   465                           
   466                           ;attempt_1.c: 160: fragment(input);
   467  000616  C07B  F06C         	movff	_input,fragment@x
   468  00061A  C07C  F06D         	movff	_input+1,fragment@x+1
   469  00061E  EC82  F001         	call	_fragment	;wreg free
   470                           
   471                           ;attempt_1.c: 161: ADCON0bits.GO_DONE = 1;
   472  000622  82C2               	bsf	4034,1,c	;volatile
   473  000624  D7F1               	goto	l1167
   474  000626                     __end_of_main:
   475                           	opt stack 0
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           postdec1	equ	0xFE5
   482                           fsr1l	equ	0xFE1
   483                           
   484 ;; *************** function _interrupt_enable *****************
   485 ;; Defined at:
   486 ;;		line 192 in file "attempt_1.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		None
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   500 ;;      Params:         0       0       0       0       0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0
   503 ;;      Totals:         0       0       0       0       0       0       0       0       0
   504 ;;Total ram usage:        0 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    3
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text1
   515  000680                     __ptext1:
   516                           	opt stack 0
   517  000680                     _interrupt_enable:
   518                           	opt stack 27
   519                           
   520                           ;attempt_1.c: 194: INTCONbits.GIE=1;
   521                           
   522                           ;incstack = 0
   523  000680  8EF2               	bsf	intcon,7,c	;volatile
   524                           
   525                           ;attempt_1.c: 195: INTCONbits.PEIE=1;
   526  000682  8CF2               	bsf	intcon,6,c	;volatile
   527                           
   528                           ;attempt_1.c: 196: INTCONbits.TMR0IE = 1;
   529  000684  8AF2               	bsf	intcon,5,c	;volatile
   530                           
   531                           ;attempt_1.c: 197: PIE1bits.ADIE = 1;
   532  000686  8C9D               	bsf	3997,6,c	;volatile
   533  000688  0012               	return		;funcret
   534  00068A                     __end_of_interrupt_enable:
   535                           	opt stack 0
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           intcon	equ	0xFF2
   541                           postinc0	equ	0xFEE
   542                           postdec1	equ	0xFE5
   543                           fsr1l	equ	0xFE1
   544                           
   545 ;; *************** function _init_timer *****************
   546 ;; Defined at:
   547 ;;		line 182 in file "attempt_1.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,2
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   561 ;;      Params:         0       0       0       0       0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; Hardware stack levels required when called:    3
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_main
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text2
   576  000664                     __ptext2:
   577                           	opt stack 0
   578  000664                     _init_timer:
   579                           	opt stack 27
   580                           
   581                           ;attempt_1.c: 184: T0CON=0b00001000;
   582                           
   583                           ;incstack = 0
   584  000664  0E08               	movlw	8
   585  000666  6ED5               	movwf	4053,c	;volatile
   586                           
   587                           ;attempt_1.c: 185: TMR0H=0xB1;
   588  000668  0EB1               	movlw	177
   589  00066A  6ED7               	movwf	4055,c	;volatile
   590                           
   591                           ;attempt_1.c: 186: TMR0L=0xE0;
   592  00066C  0EE0               	movlw	224
   593  00066E  6ED6               	movwf	4054,c	;volatile
   594                           
   595                           ;attempt_1.c: 188: INTCONbits.TMR0IF=0;
   596  000670  94F2               	bcf	intcon,2,c	;volatile
   597                           
   598                           ;attempt_1.c: 189: T0CONbits.TMR0ON=1;
   599  000672  8ED5               	bsf	4053,7,c	;volatile
   600  000674  0012               	return		;funcret
   601  000676                     __end_of_init_timer:
   602                           	opt stack 0
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           intcon	equ	0xFF2
   608                           postinc0	equ	0xFEE
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612 ;; *************** function _fragment *****************
   613 ;; Defined at:
   614 ;;		line 167 in file "attempt_1.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;  x               2   12[BANK0 ] unsigned int 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  hun             1   16[BANK0 ] unsigned char 
   619 ;;  ten             1   15[BANK0 ] unsigned char 
   620 ;;  unit            1   14[BANK0 ] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   630 ;;      Params:         0       2       0       0       0       0       0       0       0
   631 ;;      Locals:         0       3       0       0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0
   633 ;;      Totals:         0       5       0       0       0       0       0       0       0
   634 ;;Total ram usage:        5 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    4
   637 ;; This function calls:
   638 ;;		___lwdiv
   639 ;;		___lwmod
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text3
   646  000304                     __ptext3:
   647                           	opt stack 0
   648  000304                     _fragment:
   649                           	opt stack 26
   650                           
   651                           ;attempt_1.c: 169: unsigned char unit,ten,hun;
   652                           ;attempt_1.c: 171: unit = (x/1)%10;
   653                           
   654                           ;incstack = 0
   655  000304  C06C  F067         	movff	fragment@x,___lwmod@dividend
   656  000308  C06D  F068         	movff	fragment@x+1,___lwmod@dividend+1
   657  00030C  0E00               	movlw	0
   658  00030E  0100               	movlb	0	; () banked
   659  000310  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
   660  000312  0E0A               	movlw	10
   661  000314  6F69               	movwf	___lwmod@divisor& (0+255),b
   662  000316  EC7A  F002         	call	___lwmod	;wreg free
   663  00031A  0100               	movlb	0	; () banked
   664  00031C  5167               	movf	?___lwmod& (0+255),w,b
   665  00031E  0100               	movlb	0	; () banked
   666  000320  6F6E               	movwf	fragment@unit& (0+255),b
   667                           
   668                           ;attempt_1.c: 172: ten = (x/10)%10;
   669  000322  0E00               	movlw	0
   670  000324  0100               	movlb	0	; () banked
   671  000326  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
   672  000328  0E0A               	movlw	10
   673  00032A  6F62               	movwf	___lwdiv@divisor& (0+255),b
   674  00032C  C06C  F060         	movff	fragment@x,___lwdiv@dividend
   675  000330  C06D  F061         	movff	fragment@x+1,___lwdiv@dividend+1
   676  000334  EC3E  F002         	call	___lwdiv	;wreg free
   677  000338  C060  F067         	movff	?___lwdiv,___lwmod@dividend
   678  00033C  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
   679  000340  0E00               	movlw	0
   680  000342  0100               	movlb	0	; () banked
   681  000344  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
   682  000346  0E0A               	movlw	10
   683  000348  6F69               	movwf	___lwmod@divisor& (0+255),b
   684  00034A  EC7A  F002         	call	___lwmod	;wreg free
   685  00034E  0100               	movlb	0	; () banked
   686  000350  5167               	movf	?___lwmod& (0+255),w,b
   687  000352  0100               	movlb	0	; () banked
   688  000354  6F6F               	movwf	fragment@ten& (0+255),b
   689                           
   690                           ;attempt_1.c: 173: hun = (x/100)%10;
   691  000356  0E00               	movlw	0
   692  000358  0100               	movlb	0	; () banked
   693  00035A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
   694  00035C  0E64               	movlw	100
   695  00035E  6F62               	movwf	___lwdiv@divisor& (0+255),b
   696  000360  C06C  F060         	movff	fragment@x,___lwdiv@dividend
   697  000364  C06D  F061         	movff	fragment@x+1,___lwdiv@dividend+1
   698  000368  EC3E  F002         	call	___lwdiv	;wreg free
   699  00036C  C060  F067         	movff	?___lwdiv,___lwmod@dividend
   700  000370  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
   701  000374  0E00               	movlw	0
   702  000376  0100               	movlb	0	; () banked
   703  000378  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
   704  00037A  0E0A               	movlw	10
   705  00037C  6F69               	movwf	___lwmod@divisor& (0+255),b
   706  00037E  EC7A  F002         	call	___lwmod	;wreg free
   707  000382  0100               	movlb	0	; () banked
   708  000384  5167               	movf	?___lwmod& (0+255),w,b
   709  000386  0100               	movlb	0	; () banked
   710  000388  6F70               	movwf	fragment@hun& (0+255),b
   711                           
   712                           ; BSR set to: 0
   713                           ;attempt_1.c: 175: number[0] = table[unit];
   714  00038A  0100               	movlb	0	; () banked
   715  00038C  516E               	movf	fragment@unit& (0+255),w,b
   716  00038E  0D01               	mullw	1
   717  000390  0E71               	movlw	low _table
   718  000392  24F3               	addwf	prodl,w,c
   719  000394  6ED9               	movwf	fsr2l,c
   720  000396  0E00               	movlw	high _table
   721  000398  20F4               	addwfc	prodh,w,c
   722  00039A  6EDA               	movwf	fsr2h,c
   723  00039C  50DF               	movf	indf2,w,c
   724  00039E  6E3A               	movwf	_number,c
   725                           
   726                           ; BSR set to: 0
   727                           ;attempt_1.c: 176: number[1] = table[ten];
   728  0003A0  0100               	movlb	0	; () banked
   729  0003A2  516F               	movf	fragment@ten& (0+255),w,b
   730  0003A4  0D01               	mullw	1
   731  0003A6  0E71               	movlw	low _table
   732  0003A8  24F3               	addwf	prodl,w,c
   733  0003AA  6ED9               	movwf	fsr2l,c
   734  0003AC  0E00               	movlw	high _table
   735  0003AE  20F4               	addwfc	prodh,w,c
   736  0003B0  6EDA               	movwf	fsr2h,c
   737  0003B2  50DF               	movf	indf2,w,c
   738  0003B4  6E3B               	movwf	_number+1,c
   739                           
   740                           ; BSR set to: 0
   741                           ;attempt_1.c: 177: number[2] = table[hun];
   742  0003B6  0100               	movlb	0	; () banked
   743  0003B8  5170               	movf	fragment@hun& (0+255),w,b
   744  0003BA  0D01               	mullw	1
   745  0003BC  0E71               	movlw	low _table
   746  0003BE  24F3               	addwf	prodl,w,c
   747  0003C0  6ED9               	movwf	fsr2l,c
   748  0003C2  0E00               	movlw	high _table
   749  0003C4  20F4               	addwfc	prodh,w,c
   750  0003C6  6EDA               	movwf	fsr2h,c
   751  0003C8  50DF               	movf	indf2,w,c
   752  0003CA  6E3C               	movwf	_number+2,c
   753                           
   754                           ; BSR set to: 0
   755  0003CC  0012               	return		;funcret
   756  0003CE                     __end_of_fragment:
   757                           	opt stack 0
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           prodh	equ	0xFF4
   763                           prodl	equ	0xFF3
   764                           intcon	equ	0xFF2
   765                           postinc0	equ	0xFEE
   766                           postdec1	equ	0xFE5
   767                           fsr1l	equ	0xFE1
   768                           indf2	equ	0xFDF
   769                           fsr2h	equ	0xFDA
   770                           fsr2l	equ	0xFD9
   771                           
   772 ;; *************** function ___lwmod *****************
   773 ;; Defined at:
   774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  dividend        2    7[BANK0 ] unsigned int 
   777 ;;  divisor         2    9[BANK0 ] unsigned int 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  counter         1   11[BANK0 ] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  2    7[BANK0 ] unsigned int 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   789 ;;      Params:         0       4       0       0       0       0       0       0       0
   790 ;;      Locals:         0       1       0       0       0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0
   792 ;;      Totals:         0       5       0       0       0       0       0       0       0
   793 ;;Total ram usage:        5 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    3
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_fragment
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text4
   804  0004F4                     __ptext4:
   805                           	opt stack 0
   806  0004F4                     ___lwmod:
   807                           	opt stack 26
   808                           
   809                           ; BSR set to: 0
   810                           ;incstack = 0
   811  0004F4  0100               	movlb	0	; () banked
   812  0004F6  5169               	movf	___lwmod@divisor& (0+255),w,b
   813  0004F8  0100               	movlb	0	; () banked
   814  0004FA  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
   815  0004FC  B4D8               	btfsc	status,2,c
   816  0004FE  D026               	goto	l504
   817                           
   818                           ; BSR set to: 0
   819  000500  0E01               	movlw	1
   820  000502  0100               	movlb	0	; () banked
   821  000504  6F6B               	movwf	___lwmod@counter& (0+255),b
   822  000506  D006               	goto	l995
   823  000508                     l993:
   824                           
   825                           ; BSR set to: 0
   826  000508  0100               	movlb	0	; () banked
   827  00050A  90D8               	bcf	status,0,c
   828  00050C  3769               	rlcf	___lwmod@divisor& (0+255),f,b
   829  00050E  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
   830  000510  0100               	movlb	0	; () banked
   831  000512  2B6B               	incf	___lwmod@counter& (0+255),f,b
   832  000514                     l995:
   833                           
   834                           ; BSR set to: 0
   835  000514  0100               	movlb	0	; () banked
   836  000516  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
   837  000518  D7F7               	goto	l993
   838  00051A                     l997:
   839                           
   840                           ; BSR set to: 0
   841  00051A  0100               	movlb	0	; () banked
   842  00051C  5169               	movf	___lwmod@divisor& (0+255),w,b
   843  00051E  0100               	movlb	0	; () banked
   844  000520  5D67               	subwf	___lwmod@dividend& (0+255),w,b
   845  000522  0100               	movlb	0	; () banked
   846  000524  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
   847  000526  0100               	movlb	0	; () banked
   848  000528  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
   849  00052A  A0D8               	btfss	status,0,c
   850  00052C  D008               	goto	l1001
   851                           
   852                           ; BSR set to: 0
   853  00052E  0100               	movlb	0	; () banked
   854  000530  5169               	movf	___lwmod@divisor& (0+255),w,b
   855  000532  0100               	movlb	0	; () banked
   856  000534  5F67               	subwf	___lwmod@dividend& (0+255),f,b
   857  000536  0100               	movlb	0	; () banked
   858  000538  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
   859  00053A  0100               	movlb	0	; () banked
   860  00053C  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
   861  00053E                     l1001:
   862                           
   863                           ; BSR set to: 0
   864  00053E  0100               	movlb	0	; () banked
   865  000540  90D8               	bcf	status,0,c
   866  000542  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
   867  000544  3369               	rrcf	___lwmod@divisor& (0+255),f,b
   868                           
   869                           ; BSR set to: 0
   870  000546  0100               	movlb	0	; () banked
   871  000548  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
   872  00054A  D7E7               	goto	l997
   873  00054C                     l504:
   874                           
   875                           ; BSR set to: 0
   876  00054C  C067  F067         	movff	___lwmod@dividend,?___lwmod
   877  000550  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
   878                           
   879                           ; BSR set to: 0
   880  000554  0012               	return		;funcret
   881  000556                     __end_of___lwmod:
   882                           	opt stack 0
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           prodh	equ	0xFF4
   888                           prodl	equ	0xFF3
   889                           intcon	equ	0xFF2
   890                           postinc0	equ	0xFEE
   891                           postdec1	equ	0xFE5
   892                           fsr1l	equ	0xFE1
   893                           indf2	equ	0xFDF
   894                           fsr2h	equ	0xFDA
   895                           fsr2l	equ	0xFD9
   896                           status	equ	0xFD8
   897                           
   898 ;; *************** function ___lwdiv *****************
   899 ;; Defined at:
   900 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  dividend        2    0[BANK0 ] unsigned int 
   903 ;;  divisor         2    2[BANK0 ] unsigned int 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  quotient        2    4[BANK0 ] unsigned int 
   906 ;;  counter         1    6[BANK0 ] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  2    0[BANK0 ] unsigned int 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   916 ;;      Params:         0       4       0       0       0       0       0       0       0
   917 ;;      Locals:         0       3       0       0       0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0
   919 ;;      Totals:         0       7       0       0       0       0       0       0       0
   920 ;;Total ram usage:        7 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    3
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_fragment
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text5
   931  00047C                     __ptext5:
   932                           	opt stack 0
   933  00047C                     ___lwdiv:
   934                           	opt stack 26
   935                           
   936                           ; BSR set to: 0
   937                           ;incstack = 0
   938  00047C  0E00               	movlw	0
   939  00047E  0100               	movlb	0	; () banked
   940  000480  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
   941  000482  0E00               	movlw	0
   942  000484  6F64               	movwf	___lwdiv@quotient& (0+255),b
   943                           
   944                           ; BSR set to: 0
   945  000486  0100               	movlb	0	; () banked
   946  000488  5162               	movf	___lwdiv@divisor& (0+255),w,b
   947  00048A  0100               	movlb	0	; () banked
   948  00048C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
   949  00048E  B4D8               	btfsc	status,2,c
   950  000490  D02C               	goto	l494
   951                           
   952                           ; BSR set to: 0
   953  000492  0E01               	movlw	1
   954  000494  0100               	movlb	0	; () banked
   955  000496  6F66               	movwf	___lwdiv@counter& (0+255),b
   956  000498  D006               	goto	l975
   957  00049A                     l973:
   958                           
   959                           ; BSR set to: 0
   960  00049A  0100               	movlb	0	; () banked
   961  00049C  90D8               	bcf	status,0,c
   962  00049E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
   963  0004A0  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
   964  0004A2  0100               	movlb	0	; () banked
   965  0004A4  2B66               	incf	___lwdiv@counter& (0+255),f,b
   966  0004A6                     l975:
   967                           
   968                           ; BSR set to: 0
   969  0004A6  0100               	movlb	0	; () banked
   970  0004A8  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
   971  0004AA  D7F7               	goto	l973
   972  0004AC                     l977:
   973                           
   974                           ; BSR set to: 0
   975  0004AC  0100               	movlb	0	; () banked
   976  0004AE  90D8               	bcf	status,0,c
   977  0004B0  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
   978  0004B2  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
   979                           
   980                           ; BSR set to: 0
   981  0004B4  0100               	movlb	0	; () banked
   982  0004B6  5162               	movf	___lwdiv@divisor& (0+255),w,b
   983  0004B8  0100               	movlb	0	; () banked
   984  0004BA  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
   985  0004BC  0100               	movlb	0	; () banked
   986  0004BE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
   987  0004C0  0100               	movlb	0	; () banked
   988  0004C2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
   989  0004C4  A0D8               	btfss	status,0,c
   990  0004C6  D00A               	goto	l985
   991                           
   992                           ; BSR set to: 0
   993  0004C8  0100               	movlb	0	; () banked
   994  0004CA  5162               	movf	___lwdiv@divisor& (0+255),w,b
   995  0004CC  0100               	movlb	0	; () banked
   996  0004CE  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
   997  0004D0  0100               	movlb	0	; () banked
   998  0004D2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
   999  0004D4  0100               	movlb	0	; () banked
  1000  0004D6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1001                           
  1002                           ; BSR set to: 0
  1003  0004D8  0100               	movlb	0	; () banked
  1004  0004DA  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  1005  0004DC                     l985:
  1006                           
  1007                           ; BSR set to: 0
  1008  0004DC  0100               	movlb	0	; () banked
  1009  0004DE  90D8               	bcf	status,0,c
  1010  0004E0  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1011  0004E2  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  1012                           
  1013                           ; BSR set to: 0
  1014  0004E4  0100               	movlb	0	; () banked
  1015  0004E6  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  1016  0004E8  D7E1               	goto	l977
  1017  0004EA                     l494:
  1018                           
  1019                           ; BSR set to: 0
  1020  0004EA  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  1021  0004EE  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1022                           
  1023                           ; BSR set to: 0
  1024  0004F2  0012               	return		;funcret
  1025  0004F4                     __end_of___lwdiv:
  1026                           	opt stack 0
  1027                           tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           prodh	equ	0xFF4
  1032                           prodl	equ	0xFF3
  1033                           intcon	equ	0xFF2
  1034                           postinc0	equ	0xFEE
  1035                           postdec1	equ	0xFE5
  1036                           fsr1l	equ	0xFE1
  1037                           indf2	equ	0xFDF
  1038                           fsr2h	equ	0xFDA
  1039                           fsr2l	equ	0xFD9
  1040                           status	equ	0xFD8
  1041                           
  1042 ;; *************** function _delay_10ms *****************
  1043 ;; Defined at:
  1044 ;;		line 210 in file "attempt_1.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  t               2    0[BANK0 ] int 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  i               2    3[BANK0 ] int 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         0       2       0       0       0       0       0       0       0
  1059 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1061 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        5 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    3
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text6
  1073  0005AC                     __ptext6:
  1074                           	opt stack 0
  1075  0005AC                     _delay_10ms:
  1076                           	opt stack 27
  1077                           
  1078                           ;attempt_1.c: 212: for(int i=0; i<t;i++)
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;incstack = 0
  1082  0005AC  0E00               	movlw	0
  1083  0005AE  0100               	movlb	0	; () banked
  1084  0005B0  6F64               	movwf	(delay_10ms@i+1)& (0+255),b
  1085  0005B2  0E00               	movlw	0
  1086  0005B4  6F63               	movwf	delay_10ms@i& (0+255),b
  1087  0005B6  D00C               	goto	l88
  1088  0005B8                     l1023:
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;attempt_1.c: 213: {
  1092                           ;attempt_1.c: 214: _delay((unsigned long)((10)*(20000000/4000.0)));
  1093  0005B8  0E41               	movlw	65
  1094  0005BA  0100               	movlb	0	; () banked
  1095  0005BC  6F62               	movwf	??_delay_10ms& (0+255),b
  1096  0005BE  0EEE               	movlw	238
  1097  0005C0                     u677:
  1098  0005C0  2EE8               	decfsz	wreg,f,c
  1099  0005C2  D7FE               	goto	u677
  1100  0005C4  2F62               	decfsz	??_delay_10ms& (0+255),f,b
  1101  0005C6  D7FC               	goto	u677
  1102  0005C8  D000               	nop2	
  1103  0005CA  0100               	movlb	0	; () banked
  1104  0005CC  4B63               	infsnz	delay_10ms@i& (0+255),f,b
  1105  0005CE  2B64               	incf	(delay_10ms@i+1)& (0+255),f,b
  1106  0005D0                     l88:
  1107                           
  1108                           ; BSR set to: 0
  1109  0005D0  0100               	movlb	0	; () banked
  1110  0005D2  5160               	movf	delay_10ms@t& (0+255),w,b
  1111  0005D4  0100               	movlb	0	; () banked
  1112  0005D6  5D63               	subwf	delay_10ms@i& (0+255),w,b
  1113  0005D8  0100               	movlb	0	; () banked
  1114  0005DA  5164               	movf	(delay_10ms@i+1)& (0+255),w,b
  1115  0005DC  0A80               	xorlw	128
  1116  0005DE  0100               	movlb	0	; () banked
  1117  0005E0  6F62               	movwf	??_delay_10ms& (0+255),b
  1118  0005E2  0100               	movlb	0	; () banked
  1119  0005E4  5161               	movf	(delay_10ms@t+1)& (0+255),w,b
  1120  0005E6  0A80               	xorlw	128
  1121  0005E8  0100               	movlb	0	; () banked
  1122  0005EA  5962               	subwfb	??_delay_10ms& (0+255),w,b
  1123  0005EC  B0D8               	btfsc	status,0,c
  1124  0005EE  0012               	return	
  1125  0005F0  D7E3               	goto	l1023
  1126  0005F2                     __end_of_delay_10ms:
  1127                           	opt stack 0
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           prodh	equ	0xFF4
  1133                           prodl	equ	0xFF3
  1134                           intcon	equ	0xFF2
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           postdec1	equ	0xFE5
  1138                           fsr1l	equ	0xFE1
  1139                           indf2	equ	0xFDF
  1140                           fsr2h	equ	0xFDA
  1141                           fsr2l	equ	0xFD9
  1142                           status	equ	0xFD8
  1143                           
  1144 ;; *************** function _adc_init *****************
  1145 ;; Defined at:
  1146 ;;		line 200 in file "attempt_1.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         0       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    3
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text7
  1175  00064A                     __ptext7:
  1176                           	opt stack 0
  1177  00064A                     _adc_init:
  1178                           	opt stack 27
  1179                           
  1180                           ;attempt_1.c: 202: ADCON1 = 0b00001110;
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;incstack = 0
  1184  00064A  0E0E               	movlw	14
  1185  00064C  6EC1               	movwf	4033,c	;volatile
  1186                           
  1187                           ;attempt_1.c: 203: ADCON0 = 0b00000000;
  1188  00064E  0E00               	movlw	0
  1189  000650  6EC2               	movwf	4034,c	;volatile
  1190                           
  1191                           ;attempt_1.c: 204: ADCON2 = 0b10100101;
  1192  000652  0EA5               	movlw	165
  1193  000654  6EC0               	movwf	4032,c	;volatile
  1194                           
  1195                           ;attempt_1.c: 205: PIR1bits.ADIF = 0;
  1196  000656  9C9E               	bcf	3998,6,c	;volatile
  1197                           
  1198                           ;attempt_1.c: 206: ADCON0bits.ADON = 1;
  1199  000658  80C2               	bsf	4034,0,c	;volatile
  1200                           
  1201                           ;attempt_1.c: 207: _delay((unsigned long)((5)*(20000000/4000000.0)));
  1202  00065A  0E08               	movlw	8
  1203  00065C                     u687:
  1204  00065C  2EE8               	decfsz	wreg,f,c
  1205  00065E  D7FE               	goto	u687
  1206  000660  F000               	nop	
  1207  000662  0012               	return		;funcret
  1208  000664                     __end_of_adc_init:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           prodh	equ	0xFF4
  1215                           prodl	equ	0xFF3
  1216                           intcon	equ	0xFF2
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec1	equ	0xFE5
  1220                           fsr1l	equ	0xFE1
  1221                           indf2	equ	0xFDF
  1222                           fsr2h	equ	0xFDA
  1223                           fsr2l	equ	0xFD9
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _isr *****************
  1227 ;; Defined at:
  1228 ;;		line 103 in file "attempt_1.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  x               2   55[COMRAM] unsigned int 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0
  1243 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1244 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1245 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1246 ;;Total ram usage:       16 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    2
  1249 ;; This function calls:
  1250 ;;		___ftmul
  1251 ;;		___fttol
  1252 ;;		___lwtoft
  1253 ;; This function is called by:
  1254 ;;		Interrupt level 2
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	intcode
  1259  000008                     __pintcode:
  1260                           	opt stack 0
  1261  000008                     _isr:
  1262                           	opt stack 26
  1263                           
  1264                           ;incstack = 0
  1265  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1266  00000A  CFFA F02A          	movff	pclath,??_isr
  1267  00000E  CFFB F02B          	movff	pclatu,??_isr+1
  1268  000012  ED0D  F000         	call	int_func,f	;refresh shadow registers
  1269                           pclatu	equ	0xFFB
  1270                           pclath	equ	0xFFA
  1271                           tblptru	equ	0xFF8
  1272                           tblptrh	equ	0xFF7
  1273                           tblptrl	equ	0xFF6
  1274                           tablat	equ	0xFF5
  1275                           prodh	equ	0xFF4
  1276                           prodl	equ	0xFF3
  1277                           intcon	equ	0xFF2
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1l	equ	0xFE1
  1282                           indf2	equ	0xFDF
  1283                           fsr2h	equ	0xFDA
  1284                           fsr2l	equ	0xFD9
  1285                           status	equ	0xFD8
  1286                           
  1287                           	psect	intcode_body
  1288  00001A                     __pintcode_body:
  1289                           	opt stack 26
  1290  00001A                     int_func:
  1291                           	opt stack 26
  1292  00001A  0006               	pop		; remove dummy address from shadow register refresh
  1293  00001C  CFE9 F02C          	movff	fsr0l,??_isr+2
  1294  000020  CFEA F02D          	movff	fsr0h,??_isr+3
  1295  000024  CFE1 F02E          	movff	fsr1l,??_isr+4
  1296  000028  CFE2 F02F          	movff	fsr1h,??_isr+5
  1297  00002C  CFD9 F030          	movff	fsr2l,??_isr+6
  1298  000030  CFDA F031          	movff	fsr2h,??_isr+7
  1299  000034  CFF3 F032          	movff	prodl,??_isr+8
  1300  000038  CFF4 F033          	movff	prodh,??_isr+9
  1301  00003C  CFF6 F034          	movff	tblptrl,??_isr+10
  1302  000040  CFF7 F035          	movff	tblptrh,??_isr+11
  1303  000044  CFF8 F036          	movff	tblptru,??_isr+12
  1304  000048  CFF5 F037          	movff	tablat,??_isr+13
  1305                           
  1306                           ;attempt_1.c: 105: if(INTCONbits.TMR0IF==1)
  1307  00004C  A4F2               	btfss	intcon,2,c	;volatile
  1308  00004E  D01F               	goto	i2l1153
  1309                           
  1310                           ;attempt_1.c: 106: {
  1311                           ;attempt_1.c: 107: if (count==0)
  1312  000050  503D               	movf	_count,w,c
  1313  000052  A4D8               	btfss	status,2,c
  1314  000054  D006               	goto	i2l1141
  1315                           
  1316                           ;attempt_1.c: 108: {
  1317                           ;attempt_1.c: 109: PORTDbits.RD7 = 0; PORTDbits.RD6 = 1; PORTDbits.RD5 = 1;
  1318  000056  9E83               	bcf	3971,7,c	;volatile
  1319  000058  8C83               	bsf	3971,6,c	;volatile
  1320  00005A  8A83               	bsf	3971,5,c	;volatile
  1321                           
  1322                           ;attempt_1.c: 110: PORTB = number[2];
  1323  00005C  C03C  FF81         	movff	_number+2,3969	;volatile
  1324  000060  D008               	goto	i2l1147
  1325  000062                     i2l1141:
  1326                           
  1327                           ;attempt_1.c: 114: else if (count==1)
  1328  000062  043D               	decf	_count,w,c
  1329  000064  A4D8               	btfss	status,2,c
  1330  000066  D007               	goto	i2l64
  1331                           
  1332                           ;attempt_1.c: 115: {
  1333                           ;attempt_1.c: 116: PORTDbits.RD7 = 1; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1;
  1334  000068  8E83               	bsf	3971,7,c	;volatile
  1335  00006A  9C83               	bcf	3971,6,c	;volatile
  1336  00006C  8A83               	bsf	3971,5,c	;volatile
  1337                           
  1338                           ;attempt_1.c: 117: PORTB = number[1]-1;
  1339  00006E  043B               	decf	_number+1,w,c
  1340  000070  6E81               	movwf	3969,c	;volatile
  1341  000072                     i2l1147:
  1342                           
  1343                           ;attempt_1.c: 118: count++;
  1344  000072  2A3D               	incf	_count,f,c
  1345                           
  1346                           ;attempt_1.c: 119: }
  1347  000074  D007               	goto	i2l63
  1348  000076                     i2l64:
  1349                           
  1350                           ;attempt_1.c: 121: else
  1351                           ;attempt_1.c: 122: {
  1352                           ;attempt_1.c: 123: PORTDbits.RD7 = 1; PORTDbits.RD6 = 1; PORTDbits.RD5 = 0;
  1353  000076  8E83               	bsf	3971,7,c	;volatile
  1354  000078  8C83               	bsf	3971,6,c	;volatile
  1355  00007A  9A83               	bcf	3971,5,c	;volatile
  1356                           
  1357                           ;attempt_1.c: 124: PORTB = number[0];
  1358  00007C  C03A  FF81         	movff	_number,3969	;volatile
  1359                           
  1360                           ;attempt_1.c: 125: count=0;
  1361  000080  0E00               	movlw	0
  1362  000082  6E3D               	movwf	_count,c
  1363  000084                     i2l63:
  1364                           
  1365                           ;attempt_1.c: 126: }
  1366                           ;attempt_1.c: 129: TMR0H=0xB1;
  1367  000084  0EB1               	movlw	177
  1368  000086  6ED7               	movwf	4055,c	;volatile
  1369                           
  1370                           ;attempt_1.c: 130: TMR0L=0xE0;
  1371  000088  0EE0               	movlw	224
  1372  00008A  6ED6               	movwf	4054,c	;volatile
  1373                           
  1374                           ;attempt_1.c: 131: INTCONbits.TMR0IF=0;
  1375  00008C  94F2               	bcf	intcon,2,c	;volatile
  1376  00008E                     i2l1153:
  1377                           
  1378                           ;attempt_1.c: 132: }
  1379                           ;attempt_1.c: 134: if (PIR1bits.ADIF == 1)
  1380  00008E  AC9E               	btfss	3998,6,c	;volatile
  1381  000090  D027               	goto	i2l67
  1382                           
  1383                           ;attempt_1.c: 135: {
  1384                           ;attempt_1.c: 136: unsigned int x;
  1385                           ;attempt_1.c: 137: x = (ADRESH & 0x0003)<<8;
  1386  000092  50C4               	movf	4036,w,c	;volatile
  1387  000094  0B03               	andlw	3
  1388  000096  6E39               	movwf	isr@x+1,c
  1389  000098  6A38               	clrf	isr@x,c
  1390                           
  1391                           ;attempt_1.c: 138: x |= (ADRESL) ;
  1392  00009A  50C3               	movf	4035,w,c	;volatile
  1393  00009C  1238               	iorwf	isr@x,f,c
  1394                           
  1395                           ;attempt_1.c: 139: input = x*factor;
  1396  00009E  C03E  F00F         	movff	_factor,___ftmul@f2
  1397  0000A2  C03F  F010         	movff	_factor+1,___ftmul@f2+1
  1398  0000A6  C040  F011         	movff	_factor+2,___ftmul@f2+2
  1399  0000AA  C038  F009         	movff	isr@x,___lwtoft@c
  1400  0000AE  C039  F00A         	movff	isr@x+1,___lwtoft@c+1
  1401  0000B2  EC13  F003         	call	___lwtoft	;wreg free
  1402  0000B6  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  1403  0000BA  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  1404  0000BE  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  1405  0000C2  EC08  F001         	call	___ftmul	;wreg free
  1406  0000C6  C00C  F01B         	movff	?___ftmul,___fttol@f1
  1407  0000CA  C00D  F01C         	movff	?___ftmul+1,___fttol@f1+1
  1408  0000CE  C00E  F01D         	movff	?___ftmul+2,___fttol@f1+2
  1409  0000D2  EC8E  F000         	call	___fttol	;wreg free
  1410  0000D6  C01B  F07B         	movff	?___fttol,_input
  1411  0000DA  C01C  F07C         	movff	?___fttol+1,_input+1
  1412                           
  1413                           ;attempt_1.c: 140: PIR1bits.ADIF = 0;
  1414  0000DE  9C9E               	bcf	3998,6,c	;volatile
  1415  0000E0                     i2l67:
  1416  0000E0  C037  FFF5         	movff	??_isr+13,tablat
  1417  0000E4  C036  FFF8         	movff	??_isr+12,tblptru
  1418  0000E8  C035  FFF7         	movff	??_isr+11,tblptrh
  1419  0000EC  C034  FFF6         	movff	??_isr+10,tblptrl
  1420  0000F0  C033  FFF4         	movff	??_isr+9,prodh
  1421  0000F4  C032  FFF3         	movff	??_isr+8,prodl
  1422  0000F8  C031  FFDA         	movff	??_isr+7,fsr2h
  1423  0000FC  C030  FFD9         	movff	??_isr+6,fsr2l
  1424  000100  C02F  FFE2         	movff	??_isr+5,fsr1h
  1425  000104  C02E  FFE1         	movff	??_isr+4,fsr1l
  1426  000108  C02D  FFEA         	movff	??_isr+3,fsr0h
  1427  00010C  C02C  FFE9         	movff	??_isr+2,fsr0l
  1428  000110  C02B  FFFB         	movff	??_isr+1,pclatu
  1429  000114  C02A  FFFA         	movff	??_isr,pclath
  1430  000118  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1431  00011A  0011               	retfie		f
  1432  00011C                     __end_of_isr:
  1433                           	opt stack 0
  1434                           pclatu	equ	0xFFB
  1435                           pclath	equ	0xFFA
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           prodh	equ	0xFF4
  1441                           prodl	equ	0xFF3
  1442                           intcon	equ	0xFF2
  1443                           postinc0	equ	0xFEE
  1444                           fsr0h	equ	0xFEA
  1445                           fsr0l	equ	0xFE9
  1446                           wreg	equ	0xFE8
  1447                           postdec1	equ	0xFE5
  1448                           fsr1h	equ	0xFE2
  1449                           fsr1l	equ	0xFE1
  1450                           indf2	equ	0xFDF
  1451                           fsr2h	equ	0xFDA
  1452                           fsr2l	equ	0xFD9
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function ___lwtoft *****************
  1456 ;; Defined at:
  1457 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  c               2    8[COMRAM] unsigned int 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  3    8[COMRAM] float 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1471 ;;      Params:         3       0       0       0       0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1474 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1475 ;;Total ram usage:        3 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    1
  1478 ;; This function calls:
  1479 ;;		___ftpack
  1480 ;; This function is called by:
  1481 ;;		_isr
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text9
  1486  000626                     __ptext9:
  1487                           	opt stack 0
  1488  000626                     ___lwtoft:
  1489                           	opt stack 26
  1490                           
  1491                           ;incstack = 0
  1492  000626  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1493  00062A  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1494  00062E  6A03               	clrf	___ftpack@arg+2,c
  1495  000630  0E8E               	movlw	142
  1496  000632  6E04               	movwf	___ftpack@exp,c
  1497  000634  0E00               	movlw	0
  1498  000636  6E05               	movwf	___ftpack@sign,c
  1499  000638  ECE7  F001         	call	___ftpack	;wreg free
  1500  00063C  C001  F009         	movff	?___ftpack,?___lwtoft
  1501  000640  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1502  000644  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1503  000648  0012               	return	
  1504  00064A                     __end_of___lwtoft:
  1505                           	opt stack 0
  1506                           pclatu	equ	0xFFB
  1507                           pclath	equ	0xFFA
  1508                           tblptru	equ	0xFF8
  1509                           tblptrh	equ	0xFF7
  1510                           tblptrl	equ	0xFF6
  1511                           tablat	equ	0xFF5
  1512                           prodh	equ	0xFF4
  1513                           prodl	equ	0xFF3
  1514                           intcon	equ	0xFF2
  1515                           postinc0	equ	0xFEE
  1516                           fsr0h	equ	0xFEA
  1517                           fsr0l	equ	0xFE9
  1518                           wreg	equ	0xFE8
  1519                           postdec1	equ	0xFE5
  1520                           fsr1h	equ	0xFE2
  1521                           fsr1l	equ	0xFE1
  1522                           indf2	equ	0xFDF
  1523                           fsr2h	equ	0xFDA
  1524                           fsr2l	equ	0xFD9
  1525                           status	equ	0xFD8
  1526                           
  1527 ;; *************** function ___fttol *****************
  1528 ;; Defined at:
  1529 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  f1              3   26[COMRAM] float 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  lval            4   36[COMRAM] unsigned long 
  1534 ;;  exp1            1   40[COMRAM] unsigned char 
  1535 ;;  sign1           1   35[COMRAM] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  4   26[COMRAM] long 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1545 ;;      Params:         4       0       0       0       0       0       0       0       0
  1546 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1547 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1548 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1549 ;;Total ram usage:       15 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_isr
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text10
  1559  00011C                     __ptext10:
  1560                           	opt stack 0
  1561  00011C                     ___fttol:
  1562                           	opt stack 27
  1563                           
  1564                           ;incstack = 0
  1565  00011C  C01D  F01F         	movff	___fttol@f1+2,??___fttol
  1566  000120  6A20               	clrf	(??___fttol+1)& (0+255),c
  1567  000122  6A21               	clrf	(??___fttol+2)& (0+255),c
  1568  000124  341C               	rlcf	___fttol@f1+1,w,c
  1569  000126  361F               	rlcf	??___fttol& (0+255),f,c
  1570  000128  E301               	bnc	u55_41
  1571  00012A  8020               	bsf	(??___fttol+1)& (0+255),0,c
  1572  00012C                     u55_41:
  1573  00012C  501F               	movf	??___fttol,w,c
  1574  00012E  6E29               	movwf	___fttol@exp1,c
  1575  000130  5029               	movf	___fttol@exp1,w,c
  1576  000132  A4D8               	btfss	status,2,c
  1577  000134  D009               	goto	i2l1089
  1578  000136  0E00               	movlw	0
  1579  000138  6E1B               	movwf	?___fttol,c
  1580  00013A  0E00               	movlw	0
  1581  00013C  6E1C               	movwf	?___fttol+1,c
  1582  00013E  0E00               	movlw	0
  1583  000140  6E1D               	movwf	?___fttol+2,c
  1584  000142  0E00               	movlw	0
  1585  000144  6E1E               	movwf	?___fttol+3,c
  1586  000146  0012               	return	
  1587  000148                     i2l1089:
  1588  000148  0E17               	movlw	23
  1589  00014A  6E1F               	movwf	??___fttol& (0+255),c
  1590  00014C  C01B  F020         	movff	___fttol@f1,??___fttol+1
  1591  000150  C01C  F021         	movff	___fttol@f1+1,??___fttol+2
  1592  000154  C01D  F022         	movff	___fttol@f1+2,??___fttol+3
  1593  000158  281F               	incf	??___fttol,w,c
  1594  00015A  6E23               	movwf	(??___fttol+4)& (0+255),c
  1595  00015C  D004               	goto	i2u57_40
  1596  00015E                     i2u57_45:
  1597  00015E  90D8               	bcf	status,0,c
  1598  000160  3222               	rrcf	??___fttol+3,f,c
  1599  000162  3221               	rrcf	??___fttol+2,f,c
  1600  000164  3220               	rrcf	??___fttol+1,f,c
  1601  000166                     i2u57_40:
  1602  000166  2E23               	decfsz	(??___fttol+4)& (0+255),f,c
  1603  000168  D7FA               	goto	i2u57_45
  1604  00016A  5020               	movf	??___fttol+1,w,c
  1605  00016C  6E24               	movwf	___fttol@sign1,c
  1606  00016E  8E1C               	bsf	___fttol@f1+1,7,c
  1607  000170  0EFF               	movlw	255
  1608  000172  161B               	andwf	___fttol@f1,f,c
  1609  000174  0EFF               	movlw	255
  1610  000176  161C               	andwf	___fttol@f1+1,f,c
  1611  000178  0E00               	movlw	0
  1612  00017A  161D               	andwf	___fttol@f1+2,f,c
  1613  00017C  501B               	movf	___fttol@f1,w,c
  1614  00017E  6E25               	movwf	___fttol@lval,c
  1615  000180  501C               	movf	___fttol@f1+1,w,c
  1616  000182  6E26               	movwf	___fttol@lval+1,c
  1617  000184  501D               	movf	___fttol@f1+2,w,c
  1618  000186  6E27               	movwf	___fttol@lval+2,c
  1619  000188  6A28               	clrf	___fttol@lval+3,c
  1620  00018A  0E8E               	movlw	142
  1621  00018C  5E29               	subwf	___fttol@exp1,f,c
  1622  00018E  AE29               	btfss	___fttol@exp1,7,c
  1623  000190  D016               	goto	i2l1111
  1624  000192  5029               	movf	___fttol@exp1,w,c
  1625  000194  0A80               	xorlw	128
  1626  000196  0F8F               	addlw	143
  1627  000198  B0D8               	btfsc	status,0,c
  1628  00019A  D009               	goto	i2l1107
  1629  00019C  0E00               	movlw	0
  1630  00019E  6E1B               	movwf	?___fttol,c
  1631  0001A0  0E00               	movlw	0
  1632  0001A2  6E1C               	movwf	?___fttol+1,c
  1633  0001A4  0E00               	movlw	0
  1634  0001A6  6E1D               	movwf	?___fttol+2,c
  1635  0001A8  0E00               	movlw	0
  1636  0001AA  6E1E               	movwf	?___fttol+3,c
  1637  0001AC  0012               	return	
  1638  0001AE                     i2l1107:
  1639  0001AE  90D8               	bcf	status,0,c
  1640  0001B0  3228               	rrcf	___fttol@lval+3,f,c
  1641  0001B2  3227               	rrcf	___fttol@lval+2,f,c
  1642  0001B4  3226               	rrcf	___fttol@lval+1,f,c
  1643  0001B6  3225               	rrcf	___fttol@lval,f,c
  1644  0001B8  3E29               	incfsz	___fttol@exp1,f,c
  1645  0001BA  D7F9               	goto	i2l1107
  1646  0001BC  D015               	goto	i2l1121
  1647  0001BE                     i2l1111:
  1648  0001BE  0E17               	movlw	23
  1649  0001C0  6429               	cpfsgt	___fttol@exp1,c
  1650  0001C2  D00F               	goto	i2l1119
  1651  0001C4  0E00               	movlw	0
  1652  0001C6  6E1B               	movwf	?___fttol,c
  1653  0001C8  0E00               	movlw	0
  1654  0001CA  6E1C               	movwf	?___fttol+1,c
  1655  0001CC  0E00               	movlw	0
  1656  0001CE  6E1D               	movwf	?___fttol+2,c
  1657  0001D0  0E00               	movlw	0
  1658  0001D2  6E1E               	movwf	?___fttol+3,c
  1659  0001D4  0012               	return	
  1660  0001D6                     i2l1117:
  1661  0001D6  90D8               	bcf	status,0,c
  1662  0001D8  3625               	rlcf	___fttol@lval,f,c
  1663  0001DA  3626               	rlcf	___fttol@lval+1,f,c
  1664  0001DC  3627               	rlcf	___fttol@lval+2,f,c
  1665  0001DE  3628               	rlcf	___fttol@lval+3,f,c
  1666  0001E0  0629               	decf	___fttol@exp1,f,c
  1667  0001E2                     i2l1119:
  1668  0001E2  5029               	movf	___fttol@exp1,w,c
  1669  0001E4  A4D8               	btfss	status,2,c
  1670  0001E6  D7F7               	goto	i2l1117
  1671  0001E8                     i2l1121:
  1672  0001E8  5024               	movf	___fttol@sign1,w,c
  1673  0001EA  B4D8               	btfsc	status,2,c
  1674  0001EC  D008               	goto	i2l1125
  1675  0001EE  1E28               	comf	___fttol@lval+3,f,c
  1676  0001F0  1E27               	comf	___fttol@lval+2,f,c
  1677  0001F2  1E26               	comf	___fttol@lval+1,f,c
  1678  0001F4  6C25               	negf	___fttol@lval,c
  1679  0001F6  0E00               	movlw	0
  1680  0001F8  2226               	addwfc	___fttol@lval+1,f,c
  1681  0001FA  2227               	addwfc	___fttol@lval+2,f,c
  1682  0001FC  2228               	addwfc	___fttol@lval+3,f,c
  1683  0001FE                     i2l1125:
  1684  0001FE  C025  F01B         	movff	___fttol@lval,?___fttol
  1685  000202  C026  F01C         	movff	___fttol@lval+1,?___fttol+1
  1686  000206  C027  F01D         	movff	___fttol@lval+2,?___fttol+2
  1687  00020A  C028  F01E         	movff	___fttol@lval+3,?___fttol+3
  1688  00020E  0012               	return	
  1689  000210                     __end_of___fttol:
  1690                           	opt stack 0
  1691                           pclatu	equ	0xFFB
  1692                           pclath	equ	0xFFA
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           intcon	equ	0xFF2
  1700                           postinc0	equ	0xFEE
  1701                           fsr0h	equ	0xFEA
  1702                           fsr0l	equ	0xFE9
  1703                           wreg	equ	0xFE8
  1704                           postdec1	equ	0xFE5
  1705                           fsr1h	equ	0xFE2
  1706                           fsr1l	equ	0xFE1
  1707                           indf2	equ	0xFDF
  1708                           fsr2h	equ	0xFDA
  1709                           fsr2l	equ	0xFD9
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function ___ftmul *****************
  1713 ;; Defined at:
  1714 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  f1              3   11[COMRAM] float 
  1717 ;;  f2              3   14[COMRAM] float 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  1720 ;;  sign            1   25[COMRAM] unsigned char 
  1721 ;;  cntr            1   24[COMRAM] unsigned char 
  1722 ;;  exp             1   20[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  3   11[COMRAM] float 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1732 ;;      Params:         6       0       0       0       0       0       0       0       0
  1733 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1734 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1735 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1736 ;;Total ram usage:       15 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		___ftpack
  1741 ;; This function is called by:
  1742 ;;		_isr
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text11
  1747  000210                     __ptext11:
  1748                           	opt stack 0
  1749  000210                     ___ftmul:
  1750                           	opt stack 26
  1751                           
  1752                           ;incstack = 0
  1753  000210  C00E  F012         	movff	___ftmul@f1+2,??___ftmul
  1754  000214  6A13               	clrf	(??___ftmul+1)& (0+255),c
  1755  000216  6A14               	clrf	(??___ftmul+2)& (0+255),c
  1756  000218  340D               	rlcf	___ftmul@f1+1,w,c
  1757  00021A  3612               	rlcf	??___ftmul& (0+255),f,c
  1758  00021C  E301               	bnc	u49_41
  1759  00021E  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  1760  000220                     u49_41:
  1761  000220  5012               	movf	??___ftmul,w,c
  1762  000222  6E15               	movwf	___ftmul@exp,c
  1763  000224  5015               	movf	___ftmul@exp,w,c
  1764  000226  A4D8               	btfss	status,2,c
  1765  000228  D007               	goto	i2l1041
  1766  00022A  0E00               	movlw	0
  1767  00022C  6E0C               	movwf	?___ftmul,c
  1768  00022E  0E00               	movlw	0
  1769  000230  6E0D               	movwf	?___ftmul+1,c
  1770  000232  0E00               	movlw	0
  1771  000234  6E0E               	movwf	?___ftmul+2,c
  1772  000236  0012               	return	
  1773  000238                     i2l1041:
  1774  000238  C011  F012         	movff	___ftmul@f2+2,??___ftmul
  1775  00023C  6A13               	clrf	(??___ftmul+1)& (0+255),c
  1776  00023E  6A14               	clrf	(??___ftmul+2)& (0+255),c
  1777  000240  3410               	rlcf	___ftmul@f2+1,w,c
  1778  000242  3612               	rlcf	??___ftmul& (0+255),f,c
  1779  000244  E301               	bnc	u51_41
  1780  000246  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  1781  000248                     u51_41:
  1782  000248  5012               	movf	??___ftmul,w,c
  1783  00024A  6E1A               	movwf	___ftmul@sign,c
  1784  00024C  501A               	movf	___ftmul@sign,w,c
  1785  00024E  A4D8               	btfss	status,2,c
  1786  000250  D007               	goto	i2l1047
  1787  000252  0E00               	movlw	0
  1788  000254  6E0C               	movwf	?___ftmul,c
  1789  000256  0E00               	movlw	0
  1790  000258  6E0D               	movwf	?___ftmul+1,c
  1791  00025A  0E00               	movlw	0
  1792  00025C  6E0E               	movwf	?___ftmul+2,c
  1793  00025E  0012               	return	
  1794  000260                     i2l1047:
  1795  000260  501A               	movf	___ftmul@sign,w,c
  1796  000262  0F7B               	addlw	123
  1797  000264  2615               	addwf	___ftmul@exp,f,c
  1798  000266  C00E  F01A         	movff	___ftmul@f1+2,___ftmul@sign
  1799  00026A  5011               	movf	___ftmul@f2+2,w,c
  1800  00026C  1A1A               	xorwf	___ftmul@sign,f,c
  1801  00026E  0E80               	movlw	128
  1802  000270  161A               	andwf	___ftmul@sign,f,c
  1803  000272  8E0D               	bsf	___ftmul@f1+1,7,c
  1804  000274  8E10               	bsf	___ftmul@f2+1,7,c
  1805  000276  0EFF               	movlw	255
  1806  000278  160F               	andwf	___ftmul@f2,f,c
  1807  00027A  0EFF               	movlw	255
  1808  00027C  1610               	andwf	___ftmul@f2+1,f,c
  1809  00027E  0E00               	movlw	0
  1810  000280  1611               	andwf	___ftmul@f2+2,f,c
  1811  000282  0E00               	movlw	0
  1812  000284  6E16               	movwf	___ftmul@f3_as_product,c
  1813  000286  0E00               	movlw	0
  1814  000288  6E17               	movwf	___ftmul@f3_as_product+1,c
  1815  00028A  0E00               	movlw	0
  1816  00028C  6E18               	movwf	___ftmul@f3_as_product+2,c
  1817  00028E  0E07               	movlw	7
  1818  000290  6E19               	movwf	___ftmul@cntr,c
  1819  000292                     i2l1061:
  1820  000292  A00C               	btfss	___ftmul@f1,0,c
  1821  000294  D006               	goto	i2l1065
  1822  000296  500F               	movf	___ftmul@f2,w,c
  1823  000298  2616               	addwf	___ftmul@f3_as_product,f,c
  1824  00029A  5010               	movf	___ftmul@f2+1,w,c
  1825  00029C  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  1826  00029E  5011               	movf	___ftmul@f2+2,w,c
  1827  0002A0  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  1828  0002A2                     i2l1065:
  1829  0002A2  90D8               	bcf	status,0,c
  1830  0002A4  320E               	rrcf	___ftmul@f1+2,f,c
  1831  0002A6  320D               	rrcf	___ftmul@f1+1,f,c
  1832  0002A8  320C               	rrcf	___ftmul@f1,f,c
  1833  0002AA  90D8               	bcf	status,0,c
  1834  0002AC  360F               	rlcf	___ftmul@f2,f,c
  1835  0002AE  3610               	rlcf	___ftmul@f2+1,f,c
  1836  0002B0  3611               	rlcf	___ftmul@f2+2,f,c
  1837  0002B2  2E19               	decfsz	___ftmul@cntr,f,c
  1838  0002B4  D7EE               	goto	i2l1061
  1839  0002B6  0E09               	movlw	9
  1840  0002B8  6E19               	movwf	___ftmul@cntr,c
  1841  0002BA                     i2l1071:
  1842  0002BA  A00C               	btfss	___ftmul@f1,0,c
  1843  0002BC  D006               	goto	i2l1075
  1844  0002BE  500F               	movf	___ftmul@f2,w,c
  1845  0002C0  2616               	addwf	___ftmul@f3_as_product,f,c
  1846  0002C2  5010               	movf	___ftmul@f2+1,w,c
  1847  0002C4  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  1848  0002C6  5011               	movf	___ftmul@f2+2,w,c
  1849  0002C8  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  1850  0002CA                     i2l1075:
  1851  0002CA  90D8               	bcf	status,0,c
  1852  0002CC  320E               	rrcf	___ftmul@f1+2,f,c
  1853  0002CE  320D               	rrcf	___ftmul@f1+1,f,c
  1854  0002D0  320C               	rrcf	___ftmul@f1,f,c
  1855  0002D2  90D8               	bcf	status,0,c
  1856  0002D4  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  1857  0002D6  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  1858  0002D8  3216               	rrcf	___ftmul@f3_as_product,f,c
  1859  0002DA  2E19               	decfsz	___ftmul@cntr,f,c
  1860  0002DC  D7EE               	goto	i2l1071
  1861  0002DE  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1862  0002E2  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1863  0002E6  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1864  0002EA  C015  F004         	movff	___ftmul@exp,___ftpack@exp
  1865  0002EE  C01A  F005         	movff	___ftmul@sign,___ftpack@sign
  1866  0002F2  ECE7  F001         	call	___ftpack	;wreg free
  1867  0002F6  C001  F00C         	movff	?___ftpack,?___ftmul
  1868  0002FA  C002  F00D         	movff	?___ftpack+1,?___ftmul+1
  1869  0002FE  C003  F00E         	movff	?___ftpack+2,?___ftmul+2
  1870  000302  0012               	return	
  1871  000304                     __end_of___ftmul:
  1872                           	opt stack 0
  1873                           pclatu	equ	0xFFB
  1874                           pclath	equ	0xFFA
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           prodh	equ	0xFF4
  1880                           prodl	equ	0xFF3
  1881                           intcon	equ	0xFF2
  1882                           postinc0	equ	0xFEE
  1883                           fsr0h	equ	0xFEA
  1884                           fsr0l	equ	0xFE9
  1885                           wreg	equ	0xFE8
  1886                           postdec1	equ	0xFE5
  1887                           fsr1h	equ	0xFE2
  1888                           fsr1l	equ	0xFE1
  1889                           indf2	equ	0xFDF
  1890                           fsr2h	equ	0xFDA
  1891                           fsr2l	equ	0xFD9
  1892                           status	equ	0xFD8
  1893                           
  1894 ;; *************** function ___ftpack *****************
  1895 ;; Defined at:
  1896 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  arg             3    0[COMRAM] unsigned um
  1899 ;;  exp             1    3[COMRAM] unsigned char 
  1900 ;;  sign            1    4[COMRAM] unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  3    0[COMRAM] float 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1912 ;;      Params:         5       0       0       0       0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1914 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1915 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1916 ;;Total ram usage:        8 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		___ftmul
  1922 ;;		___lwtoft
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text12
  1927  0003CE                     __ptext12:
  1928                           	opt stack 0
  1929  0003CE                     ___ftpack:
  1930                           	opt stack 26
  1931                           
  1932                           ;incstack = 0
  1933  0003CE  5004               	movf	___ftpack@exp,w,c
  1934  0003D0  B4D8               	btfsc	status,2,c
  1935  0003D2  D005               	goto	i2l935
  1936  0003D4  5001               	movf	___ftpack@arg,w,c
  1937  0003D6  1002               	iorwf	___ftpack@arg+1,w,c
  1938  0003D8  1003               	iorwf	___ftpack@arg+2,w,c
  1939  0003DA  A4D8               	btfss	status,2,c
  1940  0003DC  D00C               	goto	i2l941
  1941  0003DE                     i2l935:
  1942  0003DE  0E00               	movlw	0
  1943  0003E0  6E01               	movwf	?___ftpack,c
  1944  0003E2  0E00               	movlw	0
  1945  0003E4  6E02               	movwf	?___ftpack+1,c
  1946  0003E6  0E00               	movlw	0
  1947  0003E8  6E03               	movwf	?___ftpack+2,c
  1948  0003EA  0012               	return	
  1949  0003EC                     i2l939:
  1950  0003EC  2A04               	incf	___ftpack@exp,f,c
  1951  0003EE  90D8               	bcf	status,0,c
  1952  0003F0  3203               	rrcf	___ftpack@arg+2,f,c
  1953  0003F2  3202               	rrcf	___ftpack@arg+1,f,c
  1954  0003F4  3201               	rrcf	___ftpack@arg,f,c
  1955  0003F6                     i2l941:
  1956  0003F6  0E00               	movlw	0
  1957  0003F8  1401               	andwf	___ftpack@arg,w,c
  1958  0003FA  6E06               	movwf	??___ftpack& (0+255),c
  1959  0003FC  0E00               	movlw	0
  1960  0003FE  1402               	andwf	___ftpack@arg+1,w,c
  1961  000400  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1962  000402  0EFE               	movlw	254
  1963  000404  1403               	andwf	___ftpack@arg+2,w,c
  1964  000406  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1965  000408  5006               	movf	??___ftpack,w,c
  1966  00040A  1007               	iorwf	??___ftpack+1,w,c
  1967  00040C  1008               	iorwf	??___ftpack+2,w,c
  1968  00040E  B4D8               	btfsc	status,2,c
  1969  000410  D00C               	goto	i2l947
  1970  000412  D7EC               	goto	i2l939
  1971  000414                     i2l943:
  1972  000414  2A04               	incf	___ftpack@exp,f,c
  1973  000416  0E01               	movlw	1
  1974  000418  2601               	addwf	___ftpack@arg,f,c
  1975  00041A  0E00               	movlw	0
  1976  00041C  2202               	addwfc	___ftpack@arg+1,f,c
  1977  00041E  0E00               	movlw	0
  1978  000420  2203               	addwfc	___ftpack@arg+2,f,c
  1979  000422  90D8               	bcf	status,0,c
  1980  000424  3203               	rrcf	___ftpack@arg+2,f,c
  1981  000426  3202               	rrcf	___ftpack@arg+1,f,c
  1982  000428  3201               	rrcf	___ftpack@arg,f,c
  1983  00042A                     i2l947:
  1984  00042A  0E00               	movlw	0
  1985  00042C  1401               	andwf	___ftpack@arg,w,c
  1986  00042E  6E06               	movwf	??___ftpack& (0+255),c
  1987  000430  0E00               	movlw	0
  1988  000432  1402               	andwf	___ftpack@arg+1,w,c
  1989  000434  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1990  000436  0EFF               	movlw	255
  1991  000438  1403               	andwf	___ftpack@arg+2,w,c
  1992  00043A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1993  00043C  5006               	movf	??___ftpack,w,c
  1994  00043E  1007               	iorwf	??___ftpack+1,w,c
  1995  000440  1008               	iorwf	??___ftpack+2,w,c
  1996  000442  B4D8               	btfsc	status,2,c
  1997  000444  D006               	goto	i2l951
  1998  000446  D7E6               	goto	i2l943
  1999  000448                     i2l949:
  2000  000448  0604               	decf	___ftpack@exp,f,c
  2001  00044A  90D8               	bcf	status,0,c
  2002  00044C  3601               	rlcf	___ftpack@arg,f,c
  2003  00044E  3602               	rlcf	___ftpack@arg+1,f,c
  2004  000450  3603               	rlcf	___ftpack@arg+2,f,c
  2005  000452                     i2l951:
  2006  000452  BE02               	btfsc	___ftpack@arg+1,7,c
  2007  000454  D003               	goto	i2l316
  2008  000456  0E02               	movlw	2
  2009  000458  6004               	cpfslt	___ftpack@exp,c
  2010  00045A  D7F6               	goto	i2l949
  2011  00045C                     i2l316:
  2012  00045C  A004               	btfss	___ftpack@exp,0,c
  2013  00045E  9E02               	bcf	___ftpack@arg+1,7,c
  2014  000460  90D8               	bcf	status,0,c
  2015  000462  3204               	rrcf	___ftpack@exp,f,c
  2016  000464  5004               	movf	___ftpack@exp,w,c
  2017  000466  1203               	iorwf	___ftpack@arg+2,f,c
  2018  000468  5005               	movf	___ftpack@sign,w,c
  2019  00046A  A4D8               	btfss	status,2,c
  2020  00046C  8E03               	bsf	___ftpack@arg+2,7,c
  2021  00046E  C001  F001         	movff	___ftpack@arg,?___ftpack
  2022  000472  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2023  000476  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2024  00047A  0012               	return	
  2025  00047C                     __end_of___ftpack:
  2026                           	opt stack 0
  2027  0000                     pclatu	equ	0xFFB
  2028                           pclath	equ	0xFFA
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           prodh	equ	0xFF4
  2034                           prodl	equ	0xFF3
  2035                           intcon	equ	0xFF2
  2036                           postinc0	equ	0xFEE
  2037                           fsr0h	equ	0xFEA
  2038                           fsr0l	equ	0xFE9
  2039                           wreg	equ	0xFE8
  2040                           postdec1	equ	0xFE5
  2041                           fsr1h	equ	0xFE2
  2042                           fsr1l	equ	0xFE1
  2043                           indf2	equ	0xFDF
  2044                           fsr2h	equ	0xFDA
  2045                           fsr2l	equ	0xFD9
  2046                           status	equ	0xFD8
  2047                           pclatu	equ	0xFFB
  2048                           pclath	equ	0xFFA
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           prodh	equ	0xFF4
  2054                           prodl	equ	0xFF3
  2055                           intcon	equ	0xFF2
  2056                           postinc0	equ	0xFEE
  2057                           fsr0h	equ	0xFEA
  2058                           fsr0l	equ	0xFE9
  2059                           wreg	equ	0xFE8
  2060                           postdec1	equ	0xFE5
  2061                           fsr1h	equ	0xFE2
  2062                           fsr1l	equ	0xFE1
  2063                           indf2	equ	0xFDF
  2064                           fsr2h	equ	0xFDA
  2065                           fsr2l	equ	0xFD9
  2066                           status	equ	0xFD8
  2067                           
  2068                           	psect	rparam
  2069  0000                     pclatu	equ	0xFFB
  2070                           pclath	equ	0xFFA
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           prodh	equ	0xFF4
  2076                           prodl	equ	0xFF3
  2077                           intcon	equ	0xFF2
  2078                           postinc0	equ	0xFEE
  2079                           fsr0h	equ	0xFEA
  2080                           fsr0l	equ	0xFE9
  2081                           wreg	equ	0xFE8
  2082                           postdec1	equ	0xFE5
  2083                           fsr1h	equ	0xFE2
  2084                           fsr1l	equ	0xFE1
  2085                           indf2	equ	0xFDF
  2086                           fsr2h	equ	0xFDA
  2087                           fsr2l	equ	0xFD9
  2088                           status	equ	0xFD8
  2089                           
  2090                           	psect	temp
  2091  000041                     btemp:
  2092                           	opt stack 0
  2093  000041                     	ds	1
  2094  0000                     int$flags	set	btemp
  2095                           pclatu	equ	0xFFB
  2096                           pclath	equ	0xFFA
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           prodh	equ	0xFF4
  2102                           prodl	equ	0xFF3
  2103                           intcon	equ	0xFF2
  2104                           postinc0	equ	0xFEE
  2105                           fsr0h	equ	0xFEA
  2106                           fsr0l	equ	0xFE9
  2107                           wreg	equ	0xFE8
  2108                           postdec1	equ	0xFE5
  2109                           fsr1h	equ	0xFE2
  2110                           fsr1l	equ	0xFE1
  2111                           indf2	equ	0xFDF
  2112                           fsr2h	equ	0xFDA
  2113                           fsr2l	equ	0xFD9
  2114                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      64
    BANK0           160     17      29
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _main in BANK0

    _main->_fragment
    _fragment->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1018
                           _adc_init
                         _delay_10ms
                           _fragment
                         _init_timer
                   _interrupt_enable
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fragment                                             5     3      2     929
                                             12 BANK0      5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     417
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     334
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _delay_10ms                                           5     3      2      89
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 16    16      0    3454
                                             41 COMRAM    16    16      0
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             3     0      3    1364
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     295
                                             26 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    1771
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1299
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _delay_10ms
   _fragment
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _init_timer
   _interrupt_enable

 _isr (ROOT)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      1D       5       18.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      40       1       68.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      20        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Jun 14 09:20:05 2016

                       l88 05D0                __CFG_BOR$ON 000000                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l504 054C                        l494 04EA  
                      l973 049A                        l975 04A6                        l985 04DC  
                      l977 04AC                        l993 0508                        l995 0514  
                      l997 051A               __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000  
                      u677 05C0                        u687 065C                        _isr 0008  
                      prod 000FF3                        wreg 000FE8               __CFG_FOSC$HS 000000  
             __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000                       l1001 053E  
                     l1023 05B8                       l1167 0608                       ?_isr 0001  
                     i2l63 0084                       i2l64 0076                       i2l67 00E0  
                     _main 05F2               ___ftpack@arg 0001               ___ftpack@exp 0004  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       btemp 0041                       isr@x 0038  
                     pclat 000FFA                       prodh 000FF4                       prodl 000FF3  
                     start 0016              __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000  
             ___ftmul@cntr 0019               ___param_bank 000010               ___ftmul@sign 001A  
             ___fttol@exp1 0029               ___fttol@lval 0025                      ??_isr 002A  
 __end_of_interrupt_enable 068A              __CFG_PLLDIV$1 000000             __CFG_CCP2MX$ON 000000  
                    ?_main 0001            __end_of___ftmul 0304                      _T0CON 000FD5  
              fragment@hun 0070            __end_of___fttol 0210                fragment@ten 006F  
          __end_of___lwdiv 04F4            __end_of___lwmod 0556                      i2l316 045C  
                    i2l941 03F6                      i2l951 0452                      i2l943 0414  
                    i2l935 03DE                      i2l947 042A                      i2l939 03EC  
                    i2l949 0448                      _TMR0H 000FD7                      _TMR0L 000FD6  
                    _PORTB 000F81                      u51_41 0248              __CFG_USBDIV$1 000000  
                    u55_41 012C                      _TRISB 000F93                      u49_41 0220  
                    _TRISD 000F95              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
                    _count 003D                      _table 0071                      _input 007B  
            ___ftpack@sign 0005                      tablat 000FF5                      status 000FD8  
           __CFG_ICPRT$OFF 000000            __initialization 0556               __end_of_main 0626  
                   ??_main 0071              ___fttol@sign1 0024              __activetblptr 000000  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   _ADRESH 000FC4                     _ADRESL 000FC3           __end_of___ftpack 047C  
         __end_of_adc_init 0664               fragment@unit 006E                     i2l1111 01BE  
                   i2l1041 0238                     i2l1121 01E8                     i2l1107 01AE  
                   i2l1061 0292                     i2l1125 01FE                     i2l1117 01D6  
                   i2l1141 0062                     i2l1071 02BA                     i2l1047 0260  
                   i2l1119 01E2                     i2l1065 02A2                     i2l1153 008E  
                   i2l1075 02CA                     i2l1147 0072                     i2l1089 0148  
         __end_of___lwtoft 064A             __CFG_XINST$OFF 000000           __end_of_fragment 03CE  
           __CFG_STVREN$ON 000000                     _factor 003E                  ??___ftmul 0012  
                ??___fttol 001F                  ??___lwdiv 0064                  ??___lwmod 006B  
                   _number 003A      ___ftmul@f3_as_product 0016               __pdataCOMRAM 003E  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0060    __end_of__initialization 05A2            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001                 ___ftmul@f1 000C                 ___ftmul@f2 000F  
               ___fttol@f1 001B             __pcstackCOMRAM 0001               __pidataBANK0 0676  
               ___lwtoft@c 0009                 __pbssBANK0 007B                 _delay_10ms 05AC  
        ?_interrupt_enable 0001                  ?___ftpack 0001                  ?_adc_init 0001  
                ?___lwtoft 0009         ??_interrupt_enable 0060                    i2u57_40 0166  
                  i2u57_45 015E                  ?_fragment 006C            __CFG_VREGEN$OFF 000000  
                  __Hparam 0000                    __Lparam 0000                    ___ftmul 0210  
                  ___fttol 011C                    ___lwdiv 047C                    ___lwmod 04F4  
                  __pcinit 0556                 ??___ftpack 0006                 _init_timer 0664  
                  __ramtop 0800                 ??_adc_init 0060                    __ptext0 05F2  
                  __ptext1 0680                    __ptext2 0664                    __ptext3 0304  
                  __ptext4 04F4                    __ptext5 047C                    __ptext6 05AC  
                  __ptext7 064A                    __ptext9 0626                 ??___lwtoft 000C  
                _T0CONbits 000FD5               __size_of_isr 0114             __pintcode_body 001A  
     end_of_initialization 05A2                 ??_fragment 006E                ?_delay_10ms 0060  
                  int_func 001A                    postdec1 000FE5                    postinc0 000FEE  
                _PORTDbits 000F83                  _TRISAbits 000F92                ___ftmul@exp 0015  
            __pidataCOMRAM 068A                ?_init_timer 0001        __size_of_delay_10ms 0046  
      start_initialization 0556                __end_of_isr 011C                __pdataBANK0 0071  
         __CFG_LPT1OSC$OFF 000000          __size_of___ftpack 00AE          __size_of_adc_init 001A  
              __pbssCOMRAM 003A          __size_of___lwtoft 0024              __pcstackBANK0 0060  
__size_of_interrupt_enable 000A        __size_of_init_timer 0012          __size_of_fragment 00CA  
         ___lwdiv@dividend 0060                  __pintcode 0008                   ?___ftmul 000C  
                 ?___fttol 001B                   ?___lwdiv 0060                   ?___lwmod 0067  
         ___lwdiv@quotient 0064               ??_delay_10ms 0062                   _PIE1bits 000F9D  
                 _PIR1bits 000F9E           __CFG_WDTPS$32768 000000                 _ADCON0bits 000FC2  
       __end_of_delay_10ms 05F2                  fragment@x 006C                  copy_data0 0578  
                 __Hrparam 0000                   __Lrparam 0000           __size_of___ftmul 00F4  
         __size_of___fttol 00F4           __size_of___lwdiv 0078               ??_init_timer 0060  
         __size_of___lwmod 0062                   ___ftpack 03CE                   _adc_init 064A  
                 ___lwtoft 0626            ___lwdiv@divisor 0062            ___lwdiv@counter 0066  
                 __ptext10 011C                   __ptext11 0210                   __ptext12 03CE  
              delay_10ms@i 0063                delay_10ms@t 0060           _interrupt_enable 0680  
                 _fragment 0304              __size_of_main 0034         __end_of_init_timer 0676  
                 int$flags 0041      __CFG_CPUDIV$OSC1_PLL2 000000                 _INTCONbits 000FF2  
                 intlevel2 0000           ___lwmod@dividend 0067            ___lwmod@divisor 0069  
          ___lwmod@counter 006B  
